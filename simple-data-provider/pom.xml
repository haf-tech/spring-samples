<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.haddouti.springeco.samples</groupId>
	<artifactId>simple-data-provider</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Data Provider</name>
	<description>A simple data provider, providing different endpoints for static and dynamic data.</description>

	<url>https://github.com/haf-tech/spring-samples</url>
	<inceptionYear>2018</inceptionYear>
	<organization>
		<name>haddouti.com</name>
		<url>http://haddouti.com</url>
	</organization>

	<developers>
		<developer>
			<name>Hafid Haddouti</name>
			<email>code@haddouti.com</email>
		</developer>
	</developers>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<version.spring>2.0.6.RELEASE</version.spring>

		<version.commit.plugin>2.2.4</version.commit.plugin>
		<version.swagger2markup>1.3.3</version.swagger2markup>
		<version.swagger>1.5.6</version.swagger>
		<version.springfox.staticdoc>2.4.0</version.springfox.staticdoc>

		<!-- Swagger properties -->
		<asciidoctor.input.directory>${project.basedir}/src/main/asciidoc</asciidoctor.input.directory>

		<!-- <swagger.output.dir>${project.build.directory}</swagger.output.dir> -->
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		<generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>

		<swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
	</properties>


	<pluginRepositories>
		<!-- For Swagger2Markup Addons -->
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>bintray-plugins</id>
			<name>bintray-plugins</name>
			<url>http://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- ########################################## -->
		<!-- ################ Spring ################## -->
		<!-- ########################################## -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring: Actuator for health checks and metrics, as well with Hystrix 
			if in classpath and expose /hystrix.stream -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>



		<dependency>
			<groupId>pl.project13.maven</groupId>
			<artifactId>git-commit-id-plugin</artifactId>
			<version>${version.commit.plugin}</version>
		</dependency>

		<!-- Spring: Testing Support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- Swagger -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${version.swagger}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${version.springfox.staticdoc}</version>
		</dependency>


		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.8.1</version>
		</dependency>


		<!-- ****** TEST Scope ****** -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-staticdocs</artifactId>
			<version>${version.springfox.staticdoc}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.properties</include>
					<include>*.yml</include>
					<include>*.yaml</include>
					<include>*.txt</include>
				</includes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
				<includes>
					<include>*.properties</include>
					<include>*.yml</include>
					<include>*.yaml</include>
					<include>*.txt</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<systemPropertyVariables>
						<test.mime>json</test.mime>
						<!-- Set parameter which will be used for the Swagger.json generation 
							test unit class -->
						<io.springfox.staticdocs.outputDir>${swagger.output.dir}</io.springfox.staticdocs.outputDir>
						<io.springfox.staticdocs.snippetsOutputDir>${swagger.snippetOutput.dir}</io.springfox.staticdocs.snippetsOutputDir>
					</systemPropertyVariables>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.haddouti.springeco.samples.provider.SimpleDataProviderApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<!-- Copy the generated files -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
							<resources>
								<resource>
									<directory>${asciidoctor.html.output.directory}</directory>
								</resource>
								<resource>
									<directory>${asciidoctor.pdf.output.directory}</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<!-- Include build info, works git-commit-plugin -->
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docu</id>
			<activation>
			</activation>
			<build>

				<plugins>

					<!-- ***************************************** -->
					<!-- ********** Documentation **************** -->
					<!-- ***************************************** -->

					<!-- Swagger2Markup: For generating files from Swagger -->
					<plugin>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-maven-plugin</artifactId>
						<version>${version.swagger2markup}</version>
						<dependencies>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup-import-files-ext</artifactId>
								<version>${version.swagger2markup}</version>
							</dependency>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
								<version>${version.swagger2markup}</version>
							</dependency>
						</dependencies>
						<configuration>
							<swaggerInput>${swagger.input}</swaggerInput>
							<outputDir>${generated.asciidoc.directory}</outputDir>
							<config>
								<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
								<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>

								<!-- <swagger2markup.extensions.dynamicOverview.contentPath>${project.basedir}/src/main/asciidoc/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath> 
									<swagger2markup.extensions.dynamicDefinitions.contentPath>${project.basedir}/src/main/asciidoc/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath> 
									<swagger2markup.extensions.dynamicPaths.contentPath>${project.basedir}/src/main/asciidoc/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath> 
									<swagger2markup.extensions.dynamicSecurity.contentPath>${project.basedir}src/main/asciidoc/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath> -->

								<swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
								<swagger2markup.extensions.springRestDocs.defaultSnippets>true</swagger2markup.extensions.springRestDocs.defaultSnippets>
							</config>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>convertSwagger2markup</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- AsciiDoc Our documentation use swagger and Ascii doc. The swagger 
						json will be generated during test phase and json file will be used in the 
						other build steps. -->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.6</version>
						<executions>
							<execution>
								<id>generate-html-documentation</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-documentation</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>pdf</backend>
									<outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<sourceDocumentName>index.adoc</sourceDocumentName>
							<attributes>
								<version-type>${version-type}</version-type>
								<version>${project.version}</version>
								<release-version>${project.version}</release-version>
								<snippets>${swagger.snippetOutput.dir}</snippets>
								<generated>${generated.asciidoc.directory}</generated>
							</attributes>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>1.5.0-alpha.11</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>